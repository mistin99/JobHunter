"""Initial migration

Revision ID: 5e901aaee310
Revises: 
Create Date: 2025-05-29 21:55:20.488198

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5e901aaee310'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('street_line1', sa.String(length=100), nullable=False),
    sa.Column('street_line2', sa.String(length=100), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.Column('zip_code', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_addresses_id'), 'addresses', ['id'], unique=False)
    op.create_table('job_offers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_offers_id'), 'job_offers', ['id'], unique=False)
    op.create_table('job_tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', sa.Enum('Html', 'Css', 'Web Developer', name='tag', native_enum=False), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_tags_id'), 'job_tags', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', sa.Enum('ADMIN', 'ORGARNISATION_OWNER', 'RECRUITER', 'MODERATOR', 'APPLICANT', name='role', native_enum=False), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_table('job_offers_tags',
    sa.Column('job_offer_id', sa.Integer(), nullable=False),
    sa.Column('job_tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_offer_id'], ['job_offers.id'], ),
    sa.ForeignKeyConstraint(['job_tag_id'], ['job_tags.id'], ),
    sa.PrimaryKeyConstraint('job_offer_id', 'job_tag_id')
    )
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('phone_number', sa.String(length=30), nullable=False),
    sa.Column('website_url', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('Pending', 'Rejected', 'Verified', 'Unverified', name='status', native_enum=False), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_email'), 'organizations', ['email'], unique=True)
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=20), nullable=False),
    sa.Column('last_name', sa.String(length=20), nullable=False),
    sa.Column('phone_number', sa.String(length=30), nullable=False),
    sa.Column('status', sa.Enum('Pending', 'Rejected', 'Verified', 'Unverified', name='status', native_enum=False), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('users_applications',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('job_offer_id', sa.Integer(), nullable=False),
    sa.Column('applied_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'VERIFIED', 'UNVERIFIED', name='status', native_enum=False), nullable=False),
    sa.ForeignKeyConstraint(['job_offer_id'], ['job_offers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'job_offer_id')
    )
    op.create_table('users_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_roles')
    op.drop_table('users_applications')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_email'), table_name='organizations')
    op.drop_table('organizations')
    op.drop_table('job_offers_tags')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_job_tags_id'), table_name='job_tags')
    op.drop_table('job_tags')
    op.drop_index(op.f('ix_job_offers_id'), table_name='job_offers')
    op.drop_table('job_offers')
    op.drop_index(op.f('ix_addresses_id'), table_name='addresses')
    op.drop_table('addresses')
    # ### end Alembic commands ###
